

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE ALBUM';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE GALLERIE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE COLLECTION';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE FOLLOW';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE LIKEU';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE TAGEU';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE COMMENTE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE POST';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE DISCUS';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE PHOTO';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CONFIG';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE APPAREIL';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE OEUVRE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE CONTNUM';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE MYDATE';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/
BEGIN
EXECUTE IMMEDIATE 'DROP TABLE USEUR';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

prompt "Fin Suppression des relations"


set serveroutput on ;


CREATE TABLE USEUR (
	IDUSEUR NUMERIC(6,0) ,
	PSEUDO VARCHAR(16) UNIQUE,
	NOM VARCHAR(16),
	PRENOM VARCHAR(16),
	MAIL VARCHAR(80),
	CONSTRAINT PK_USEUR PRIMARY KEY (IDUSEUR)
);

CREATE TABLE MYDATE (
	IDMYDATE NUMERIC(6,0),
	DATEMYDATE DATE, -- pas forcement superieur a date sys car on pourrait re injecter des publications suite a une mauvaise suppression ? a voir 
	CONSTRAINT PK_MYDATE PRIMARY KEY (IDMYDATE)
);

CREATE TABLE CONTNUM(
	IDCONTNUM NUMERIC(6,0),
	ID_USEUR_CONTNUM NUMERIC(6,0) NOT NULL, -- pas forcement rajouter une date a tous les contenus numÃƒÂ©riques meme si fort probable
	CONSTRAINT PK_CONTNUM PRIMARY KEY (IDCONTNUM),
	CONSTRAINT FK_CONTNUM_USEUR FOREIGN KEY (ID_USEUR_CONTNUM) REFERENCES USEUR (IDUSEUR) ON DELETE CASCADE
);

CREATE TABLE OEUVRE(
	IDOEUVRE NUMERIC(6,0),
	ID_CONTNUM_OEUVRE NUMERIC(6,0) UNIQUE NOT NULL,
	ID_MYDATE_OEUVRE NUMERIC(6,0) ,
	LICENCE VARCHAR(30) CHECK (LICENCE IN ('TousDroitsReserves','UtilisationCommerciale','DroitDeModification')),
	LATITUDE FLOAT CHECK (LATITUDE>=-90 AND LATITUDE<= 90) ,
	LONGITUDE FLOAT CHECK (LONGITUDE>=-180 AND LONGITUDE<= 180) ,
	CONSTRAINT PK_OEUVRE PRIMARY KEY (IDOEUVRE),
	CONSTRAINT FK_OEUVRE_CONTNUM FOREIGN KEY (ID_CONTNUM_OEUVRE) REFERENCES CONTNUM (IDCONTNUM) ON DELETE CASCADE,
	CONSTRAINT FK_OEUVRE_MYDATE FOREIGN KEY (ID_MYDATE_OEUVRE) REFERENCES MYDATE (IDMYDATE)
);

CREATE TABLE APPAREIL(
	IDAPPAREIL NUMERIC(6,0), --id produit 
	NOM VARCHAR(250),
	EAN NUMERIC(6,0) , -- id du modele
	MARQUE VARCHAR(30),
	CONSTRAINT PK_APPAREIL PRIMARY KEY (IDAPPAREIL)
	
);

CREATE TABLE CONFIG(
	IDCONFIG NUMERIC(6,0),
	OUVFOCAL VARCHAR(26)NOT NULL,
	TPSEXPO VARCHAR(20) NOT NULL , --NUMBER(8) CHECK ( TPSEXPO > 0 ),
	FLASH NUMBER(1) CHECK ( FLASH=0 OR FLASH=1) NOT NULL , --0/1 , check in aussi ? 
	ID_APPAREIL_CONFIG NUMERIC(6,0),-- NOT NULL,
	DISTFOCAL NUMBER(5)NOT NULL,
	CONSTRAINT PK_CONFIG PRIMARY KEY (IDCONFIG),
	CONSTRAINT FK_CONFIG_APPAREIL FOREIGN KEY (ID_APPAREIL_CONFIG) REFERENCES APPAREIL (IDAPPAREIL) ON DELETE CASCADE
);

CREATE TABLE PHOTO(
	IDPHOTO NUMERIC(6,0),
	ID_OEUVRE_PHOTO NUMERIC(6,0) UNIQUE , --unique pas necessaire vue que primary key l'enforce : je ne pense pas 
	ID_CONFIG_PHOTO NUMERIC(6,0) ,
	CODE NUMERIC(6,0) NOT NULL UNIQUE ,--  sert a rien  
	CONSTRAINT PK_PHOTO PRIMARY KEY (IDPHOTO,ID_OEUVRE_PHOTO), 
	CONSTRAINT FK_PHOTO_OEUVRE FOREIGN KEY (ID_OEUVRE_PHOTO) REFERENCES OEUVRE (IDOEUVRE) ON DELETE CASCADE ,
	CONSTRAINT FK_PHOTO_CONFIG FOREIGN KEY (ID_CONFIG_PHOTO) REFERENCES CONFIG (IDCONFIG)
);

CREATE TABLE DISCUS( --sert a rien 
	IDDISCUS NUMERIC(6,0),
	CONSTRAINT PK_DISCUS PRIMARY KEY (IDDISCUS)
);

CREATE TABLE POST (
    IDPOST NUMERIC(6,0),    --degenerate
	ID_USEUR_POST NUMERIC(6,0) NOT NULL ,
	ID_MYDATE_POST NUMERIC(6,0) NOT NULL, -- 2 post diff sur une meme date 
	ID_OEUVRE_POST NUMERIC(6,0) NOT NULL , -- 2 post diff sur une meme oeuvre prq pas
	ID_DISCUS_POST NUMERIC(6,0) UNIQUE ,--TODO NOT NULL ,
	NBVUES NUMERIC(16) CHECK (NBVUES >= 0 ) ,
	CONSTRAINT PK_POST PRIMARY KEY (IDPOST ),
	CONSTRAINT FK_POST_USEUR FOREIGN KEY (ID_USEUR_POST) REFERENCES USEUR (IDUSEUR),
	CONSTRAINT FK_POST_MYDATE FOREIGN KEY (ID_MYDATE_POST) REFERENCES MYDATE (IDMYDATE), 
	CONSTRAINT FK_POST_OEUVRE FOREIGN KEY (ID_OEUVRE_POST) REFERENCES OEUVRE (IDOEUVRE) ON DELETE CASCADE,
	CONSTRAINT FK_POST_DISCUS FOREIGN KEY (ID_DISCUS_POST) REFERENCES DISCUS (IDDISCUS)  
);

CREATE TABLE COMMENTE(
	IDCOMMENTE NUMERIC(6,0),
	ID_CONTNUM_COMMENTE NUMERIC(6,0) UNIQUE NOT NULL, 
	ID_DISCUS_COMMENTE NUMERIC(6,0) NOT NULL, --suffisant meme si degenere ---discus et commente cible le meme si on decommente id_post_discus
	ID_MYDATE_COMMENTE NUMERIC(6,0) ,
	CONTENT VARCHAR(256), --voir varchar2 pour plus grand 
	CONSTRAINT PK_COMMENTE PRIMARY KEY (IDCOMMENTE),
	CONSTRAINT FK_COMMENTE_DISCUS FOREIGN KEY (ID_DISCUS_COMMENTE) REFERENCES DISCUS (IDDISCUS)  ON DELETE CASCADE,
	CONSTRAINT FK_COMMENTE_CONTNUM FOREIGN KEY (ID_CONTNUM_COMMENTE) REFERENCES CONTNUM (IDCONTNUM) ON DELETE CASCADE ,
	CONSTRAINT FK_COMMENTE_MYDATE FOREIGN KEY (ID_MYDATE_COMMENTE) REFERENCES MYDATE (IDMYDATE)
);

CREATE TABLE TAGEU (
	IDTAGEU NUMERIC(6,0),
    	ID_USEUR_TAGEU NUMERIC(6,0) DEFAULT NULL, --si NULL => robot site
	ID_POST_TAGEU NUMERIC(6,0) NOT NULL , 
	TAGVALUE VARCHAR(16) NOT NULL,
	CONSTRAINT PK_TAGEU PRIMARY KEY (IDTAGEU),
	CONSTRAINT FK_TAGEU_USEUR FOREIGN KEY (ID_USEUR_TAGEU) REFERENCES USEUR (IDUSEUR),
	CONSTRAINT FK_TAGEU_POST FOREIGN KEY (ID_POST_TAGEU) REFERENCES POST (IDPOST) ON DELETE CASCADE
);

CREATE TABLE LIKEU (
	ID_USEUR_LIKEU NUMERIC(6,0) , --deja cas
	ID_MYDATE_LIKEU NUMERIC(6,0)  ,
	ID_POST_LIKEU NUMERIC(6,0) NOT NULL, --deja cas
	CONSTRAINT PK_LIKEU PRIMARY KEY (ID_USEUR_LIKEU,ID_POST_LIKEU),-- avec un utilisateur et la clef primaire de POST on peut indentifier un like mais si utilisateur par du site alors user = NULL donc besoin date :FAUX 
	CONSTRAINT FK_LIKEU_POST FOREIGN KEY (ID_POST_LIKEU) REFERENCES POST (IDPOST) ON DELETE CASCADE ,
	CONSTRAINT FK_LIKEU_MYDATE FOREIGN KEY (ID_MYDATE_LIKEU) REFERENCES MYDATE (IDMYDATE)
);

CREATE TABLE FOLLOW (
	ID_USEUR_FOLLOW NUMERIC(6,0)NOT NULL, --deja cas
	ID_USEUR_FOLLOW2 NUMERIC(6,0)NOT NULL, --deja cas
	ID_MYDATE_FOLLOW NUMERIC(6,0) ,
	CONSTRAINT PK_FOLLOW PRIMARY KEY (ID_USEUR_FOLLOW,ID_USEUR_FOLLOW2), --si ordre compte 
	CONSTRAINT FK_FOLLOW_USEUR FOREIGN KEY (ID_USEUR_FOLLOW) REFERENCES USEUR (IDUSEUR) ON DELETE CASCADE,
	CONSTRAINT FK_FOLLOW_USEUR2 FOREIGN KEY (ID_USEUR_FOLLOW2) REFERENCES USEUR (IDUSEUR) ON DELETE CASCADE ,
	CONSTRAINT FK_FOLLOW_MYDATE FOREIGN KEY (ID_MYDATE_FOLLOW) REFERENCES MYDATE (IDMYDATE)
);

CREATE TABLE COLLECTION ( 
	IDCOLLECTION NUMERIC(6,0),
	ID_USEUR_COLLECTION NUMERIC(6,0) NOT NULL, 
	TITRE VARCHAR(16) ,
	DESCRIPTION VARCHAR(126) ,
	ID_MYDATE_COLLECTION NUMERIC(6,0),
	CONSTRAINT PK_COLLECTION PRIMARY KEY (IDCOLLECTION), 
	CONSTRAINT FK_COLLECTION_USEUR FOREIGN KEY (ID_USEUR_COLLECTION) REFERENCES USEUR (IDUSEUR) ON DELETE CASCADE,
	CONSTRAINT FK_COLLECTION_MYDATE FOREIGN KEY (ID_MYDATE_COLLECTION) REFERENCES MYDATE (IDMYDATE)
	
);

CREATE TABLE GALLERIE (
	IDGALLERIE NUMERIC(6,0),
	ID_COLLECTION_GALLERIE NUMERIC(6,0) NOT NULL ,  --TODO est primary key 
	ID_POST_GALLERIE NUMERIC(6,0) , --TODO est primary key 
	CONSTRAINT PK_GALLERIE PRIMARY KEY (IDGALLERIE,ID_POST_GALLERIE), 
	CONSTRAINT FK_GALLERIE_COLLECTION FOREIGN KEY (ID_COLLECTION_GALLERIE) REFERENCES COLLECTION(IDCOLLECTION) ON DELETE CASCADE ,
	CONSTRAINT FK_GALLERIE_POST FOREIGN KEY (ID_POST_GALLERIE) REFERENCES POST(IDPOST) ON DELETE CASCADE
);

CREATE TABLE ALBUM (
	IDALBUM NUMERIC(6,0),
	ID_COLLECTION_ALBUM NUMERIC(6,0) NOT NULL , --TODO est primary key 
	ID_POST_ALBUM NUMERIC(6,0), --TODO est primary key 
	CONSTRAINT PK_ALBUM PRIMARY KEY (IDALBUM,ID_POST_ALBUM ), 
	CONSTRAINT FK_ALBUM_COLLECTION FOREIGN KEY (ID_COLLECTION_ALBUM) REFERENCES COLLECTION(IDCOLLECTION) ON DELETE CASCADE,
	CONSTRAINT FK_ALBUM_POST FOREIGN KEY (ID_POST_ALBUM) REFERENCES POST(IDPOST) ON DELETE CASCADE
);


CREATE OR REPLACE FUNCTION deg2rad ( deg IN FLOAT)
RETURN FLOAT 
IS 
res FLOAT ;
BEGIN 
	res := (deg * 3.141592653589793238462643383279502884197169399375) /180;
	RETURN (res) ;
END;
/
CREATE OR REPLACE FUNCTION surfaceToDist ( surface IN FLOAT)
RETURN FLOAT 
IS 
res FLOAT ;
BEGIN 
	res := SQRT(surface/3.141592653589793238462643383279502884197169399375); --my_global_varpackage.pi);
	RETURN (res) ;
END;
/

CREATE OR REPLACE FUNCTION haversine ( lat1 IN NUMBER, lon1 IN NUMBER,lat2 IN NUMBER , lon2 IN NUMBER)
RETURN NUMBER 
IS 
dLon NUMBER;

dLat NUMBER ;
a1 NUMBER ; 
c1 NUMBER ;
d1 NUMBER ;
BEGIN 
   dLat := deg2rad(lat2-lat1);  
   dLon:= deg2rad(lon2-lon1); 
    a1:=SIN(dLat/2) * SIN(dLat/2) +COS(deg2rad(lat1)) * COS(deg2rad(lat2)) * SIN(dLon/2) * SIN(dLon/2); 
  c1:=2 * ATAN2(SQRT(a1), SQRT(1-a1));
  d1:= 6378 * c1; 
  RETURN d1;
  
END;
/

CREATE OR REPLACE FUNCTION max_min_lat (maxe IN NUMBER,lat IN NUMBER , rayon IN NUMBER   )
RETURN NUMBER -- pas boolean car sinon pas comparaison where clause 
IS
tmp NUMBER;
BEGIN
IF maxe = 1 THEN
 tmp := lat  + (rayon / 6378) * (180 / 3.141592653589793238462643383279502884197169399375);
ELSIF maxe = 0 THEN
    tmp := lat  - (rayon / 6378) * (180 / 3.141592653589793238462643383279502884197169399375);
ELSE 
    RAISE_APPLICATION_ERROR(-20500,'maxe correspond a rien' );
END IF ; 
return tmp ;
END;
/
CREATE OR REPLACE FUNCTION max_min_lng (maxe IN NUMBER , lat IN NUMBER , lng IN NUMBER , rayon IN NUMBER   )
RETURN NUMBER -- pas boolean car sinon pas comparaison where clause 
IS
tmp NUMBER;
BEGIN
IF maxe = 1 THEN
 tmp := lng  +  (rayon /6378) * (180 / 3.141592653589793238462643383279502884197169399375) / cos(lat * 3.141592653589793238462643383279502884197169399375/180);
 ELSIF maxe = 0 THEN
    tmp := lng  -  (rayon /6378) * (180 / 3.141592653589793238462643383279502884197169399375) / cos(lat * 3.141592653589793238462643383279502884197169399375/180);
ELSE 
    RAISE_APPLICATION_ERROR(-20500,'maxe correspond a rien' );
END IF ; 
return tmp ;
END;
/

BEGIN
EXECUTE IMMEDIATE 'DROP TABLE villes_france_free';
EXCEPTION
 WHEN OTHERS THEN
	IF SQLCODE != -942 THEN
	RAISE;
	END IF;
END;
/

CREATE TABLE  villes_france_free (  
  ville_id NUMBER(8)  ,  
  ville_departement varchar(3) ,  
  ville_slug varchar(255) ,  
  ville_nom varchar(45) ,  
  ville_nom_simple varchar(45) ,  
  ville_nom_reel varchar(45) ,  
  ville_nom_soundex varchar(20) ,  
  ville_nom_metaphone varchar(22) ,  
  ville_code_postal varchar(255) ,  
  ville_commune varchar(3) ,  
  ville_code_commune varchar(5) ,  
  ville_arrondissement NUMBER(3)  ,  
  ville_canton varchar(4) ,  
  ville_surface float,   
  ville_longitude_deg float,  
  ville_latitude_deg  float,   
  ville_longitude_grd varchar(9) ,  
  ville_latitude_grd varchar(8) ,  
  ville_longitude_dms varchar(9) ,  
  ville_latitude_dms varchar(8) ,  
  ville_zmin NUMBER(8) ,  
  ville_zmax NUMBER(4)  
);

INSERT INTO villes_france_free (ville_id, ville_departement, ville_slug, ville_nom, ville_nom_simple, ville_nom_reel, ville_nom_soundex, ville_nom_metaphone, ville_code_postal, ville_commune, ville_code_commune, ville_arrondissement, ville_canton, ville_surface, ville_longitude_deg, ville_latitude_deg, ville_longitude_grd, ville_latitude_grd, ville_longitude_dms, ville_latitude_dms, ville_zmin, ville_zmax) VALUES (13339, '34', 'montpellier', 'MONTPELLIER', 'montpellier', 'Montpellier', 'M3146', 'MNTPLR', '34000-34070-34080-34090', '172', '34172', 3, '99',  56.88, 3.88333, 43.6, '1711', '48457', '+35236', '433640', 7, 121) ;


CREATE OR REPLACE FUNCTION findInfoVille (nomVille IN VARCHAR2  )
RETURN  VARCHAR2 --rayon_lng_lat  -- pas boolean car sinon pas comparaison where clause 
IS
tmp VARCHAR2(300);
BEGIN
    tmp := 'SELECT  ville_longitude_deg ,ville_latitude_deg ,ville_surface FROM villes_france_free WHERE ville_slug  LIKE ' || nomVille || 'OR ville_nom LIKE ' || nomVille || 'OR ville_nom_simple LIKE ' || nomVille || ' OR ville_nom_reel LIKE '|| nomVille ;
    RETURN tmp ;
END;
/

INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (1,'PierreD2','Dupont','Pierre','pierre.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (2,'PatrickD2','Dupont','Patrick','patrick.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (3,'PaulD2','Dupont','Paul','paul.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (4,'PaqueretteD2','Dupont','Paquerette','Paquerette.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (5,'PascaleD2','Dupont','Pascale','pascale.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (6,'PabloD2','Dupont','Pablo','pablo.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (7,'PhilippeD2','Dupont','Philippe','philippe.dupont@gmail.com');
INSERT INTO USEUR (IDUSEUR ,PSEUDO,NOM,PRENOM,MAIL ) VALUES (8,'PatriciaD2','Dupont','Patricia','patricia.dupont@gmail.com');



INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (1,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (2,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (3,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (4,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (5,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (6,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (7,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (8,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (9,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (10,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (11,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (12,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));
INSERT INTO MYDATE (IDMYDATE ,DATEMYDATE ) VALUES  (13,TO_DATE('2022/09/15 17:50:11', 'yyyy/mm/dd hh24:mi:ss'));


INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (1,1);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (2,1);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (3,2);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (4,3);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (5,3);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (6,3);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (7,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (8,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (9,5);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (10,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (11,6);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (12,7);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (13,3);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (14,3);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (15,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (16,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (17,5);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (18,4);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (19,6);
INSERT INTO CONTNUM ( IDCONTNUM ,ID_USEUR_CONTNUM) VALUES (20,7);




INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (1,1,1,'TousDroitsReserves',45.7667964,4.8358581);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (2,2,2,'TousDroitsReserves',45.245783, 2.171033);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (3,4,4,'TousDroitsReserves',43.451651, 0.190064);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (4,3,3,'TousDroitsReserves' ,43.608747, 3.889194);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (5,9,9,'TousDroitsReserves',44.886517, 0.887887);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (6,11,11,'TousDroitsReserves',44.097743, -1.306180);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (7,10,10,'TousDroitsReserves',46.728759, -0.497960);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (8,8,8,'TousDroitsReserves',46.174745, 0.567798);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (9,7,7,'TousDroitsReserves',43.630861, 3.855133);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (10,6,6,'TousDroitsReserves',48.535754, -0.449022);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (11,13,13,'TousDroitsReserves',50.330492, 2.369838);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (12,12,12,'TousDroitsReserves',43.571966, 3.861466);
INSERT INTO OEUVRE( IDOEUVRE ,ID_CONTNUM_OEUVRE, ID_MYDATE_OEUVRE , LICENCE ,LATITUDE ,LONGITUDE) VALUES (13,5,5,'TousDroitsReserves',43.642856, 3.900339);


INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (1);

INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (2);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (3);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (4);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (5);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (6);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (7);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (8);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (9);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (10);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (11);
INSERT INTO DISCUS  (IDDISCUS  ) VALUES  (12);


INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (1,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (2,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (3,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (11,'modele-Y',400023,'Samsung');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (12,'modele-Y',400023,'Samsung');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (13,'modele-Z',400024,'Sony');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (10,'modele-A',400032,'Canon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (15,'modele-B',400015,'Samsung');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (7,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (4,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (5,'modele-X',400071,'Nikon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (14,'modele-Z',400024,'Sony');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (8,'modele-A',400032,'Canon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (9,'modele-A',400032,'Canon');
INSERT INTO APPAREIL(IDAPPAREIL ,NOM ,EAN  ,MARQUE ) VALUES (6,'modele-X',400071,'Nikon');


INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES (1,'F/1','1/1000',1,1,28);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG  ,DISTFOCAL ) VALUES(2,'f/4','1/500',1,4,35);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG , DISTFOCAL ) VALUES(3,'f/5.6','1/250',1,3,200);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG  ,DISTFOCAL ) VALUES(4,'f/8','1/125',0,2,35);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES(5,'F/11','1/60',1,3,28);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES(6,'f/16','1/30',0,4,28);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES(7,'f/22','1',1,5,200);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES(8,'f/32','1/2',1,6,200);
INSERT INTO CONFIG(IDCONFIG ,OUVFOCAL ,TPSEXPO ,FLASH ,ID_APPAREIL_CONFIG ,DISTFOCAL ) VALUES(9,'f/2.8','1/4',0,7,35);


INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES (1,2,4,9);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(2,6,7,10);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(3,4,9,11);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(4,5,4,12);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(5,7,5,13);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(6,3,3,14);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(7,8,1,15);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(8,9,6,16);
INSERT INTO PHOTO (IDPHOTO,ID_OEUVRE_PHOTO,ID_CONFIG_PHOTO,CODE) VALUES(9,1,8,17);


INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES (1,1,7,2,2,120);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(2,1,9,1,1,130);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(3,4,12,9,7,0);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(4,2,1,4,3,50); 
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(5,4,5,9,4,80);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(6,5,2,5,9,120);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(7,7,10,12,12,140);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(8,4,3,8,8,90);
INSERT INTO  POST (IDPOST ,ID_USEUR_POST,ID_MYDATE_POST,ID_OEUVRE_POST, ID_DISCUS_POST,NBVUES ) VALUES(9,6,4,6,11,45);


INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES (1,14,2,2,'comment1');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE,ID_MYDATE_COMMENTE ,CONTENT ) VALUES(2,20,1,1,'comment2');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES(3,17,12,12,'comment3');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES(4,19,11,11,'comment4');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES(5,15,3,3,'comment5');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES(6,16,8,8,'comment6');
INSERT INTO COMMENTE(IDCOMMENTE ,ID_CONTNUM_COMMENTE,ID_DISCUS_COMMENTE, ID_MYDATE_COMMENTE ,CONTENT ) VALUES(7,18,1,1,'comment7');





INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (1,4,5,'Sun');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (2,8,3,'Sea');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (3,8,3,'Montpellier');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (4,8,4,'blue');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (5,2,4,'bird');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (6,3,9,'blue');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (7,5,6,'dog');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (8,1,8,'Sun');
INSERT INTO  TAGEU (IDTAGEU,ID_USEUR_TAGEU ,ID_POST_TAGEU, TAGVALUE) VALUES (9,7,9,'work');


INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (1,1,1);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (2,2,4);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (1,2,4);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (3,3,5);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (5,5,9);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (6,6,9);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (1,3,9);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (8,8,3);
INSERT INTO LIKEU (ID_USEUR_LIKEU ,ID_MYDATE_LIKEU ,ID_POST_LIKEU ) VALUES (9,8,2);


INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (1,2,1);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (1,3,1);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (2,1,2);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (4,8,4);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (7,8,7);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (8,1,8);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (5,4,5);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (6,5,6);
INSERT INTO FOLLOW (ID_USEUR_FOLLOW ,ID_USEUR_FOLLOW2 ,ID_MYDATE_FOLLOW ) VALUES (4,5,1);


INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (1,3,'Bonjour','ca va ', 1);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (2,8,'Bonjour2','ca va 2', 2);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (3,5,'Bonjour3','ca va 3', 3);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (4,8,'Bonjour4','ca va4 ', 4);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (5,6,'Bonjour','ca va ', 5);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (6,3,'Bonjour6','ca va 6', 6);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (7,3,'Bonjour','ca va ', 7);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION  ) VALUES (8,7,'Bonjour8','ca va 8', 8);
INSERT INTO COLLECTION (IDCOLLECTION,ID_USEUR_COLLECTION,TITRE,DESCRIPTION,ID_MYDATE_COLLECTION ) VALUES (9,1,'Bonjour9','ca va9 ', 9);

INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (1,3,8);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (1,3,2);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (1,3,4);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (2,7,8);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (3,5,2);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (3,5,5);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (4,2,3);
INSERT INTO GALLERIE (IDGALLERIE ,ID_COLLECTION_GALLERIE ,ID_POST_GALLERIE ) VALUES (5,9,1);


--INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (1,4,NULL);
INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (7,4,6);
INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (2,8,7);
--INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (6,4,6); --jsp prq
INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (3,4,8);
INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (4,6,4);
--INSERT INTO ALBUM (IDALBUM ,ID_COLLECTION_ALBUM ,ID_POST_ALBUM ) VALUES (5,2,8); --deja une gallerie 

--SELECT idoeuvre,longitude ,latitude ,max_min_lng (0, latitude , longitude ,t1.ville_rayon  ) as minlng , max_min_lng (1, latitude , longitude ,t1.ville_rayon  )as  maxlat , max_min_lat (0, latitude ,t1.ville_rayon  ) as minlat ,max_min_lat (1, latitude  ,t1.ville_rayon  ) as maxlat FROM OEUVRE  ,(SELECT  surfaceToDist (ville_surface) as ville_rayon ,ville_longitude_deg ,ville_latitude_deg  FROM villes_france_free WHERE ville_slug  LIKE 'Montpellier' OR ville_nom LIKE 'Montpellier' OR ville_nom_simple LIKE 'Montpellier' OR ville_nom_reel LIKE 'Montpellier') t1   ;

WITH t1 AS (
SELECT  surfaceToDist (ville_surface) as ville_rayon ,ville_longitude_deg ,ville_latitude_deg  FROM villes_france_free 
WHERE ville_slug  LIKE 'Montpellier' OR ville_nom LIKE 'Montpellier' OR ville_nom_simple LIKE 'Montpellier' OR ville_nom_reel LIKE 'Montpellier'
)
SELECT idpost,idoeuvre , longitude ,latitude  FROM OEUVRE  , t1 
    ,POST--,PHOTO
    WHERE --id_oeuvre_photo=idoeuvre 
    idoeuvre = POST.id_oeuvre_post  AND longitude <= max_min_lng (1, latitude , longitude ,t1.ville_rayon  ) AND longitude >= max_min_lng (0, latitude , longitude ,t1.ville_rayon  ) 
    AND latitude <= max_min_lat (1, latitude  ,t1.ville_rayon  ) AND latitude >= max_min_lng (0, latitude , longitude , t1.ville_rayon  ) 
    AND haversine ( latitude , longitude , t1.ville_latitude_deg , t1.ville_longitude_deg ) <= t1.ville_rayon ;


SELECT tagvalue FROM  TAGEU t1 GROUP BY  t1.tagvalue HAVING COUNT(t1.tagvalue) >= ALL (SELECT COUNT(tagvalue) FROM  TAGEU t2 GROUP BY  t2.tagvalue )  ;


SELECT idpost , tagvalue ,nbVues   FROM  POST , TAGEU WHERE tageu.tagvalue = 'blue' AND idpost= id_post_tageu ORDER BY nbVues  ;


--SELECT ROW_NUMBER() OVER (ORDER BY COUNT(idAppareil) DESC ) AS classement , marque ,nom , COUNT(idAppareil) as nb_de_modeles , COUNT(*) * 100.0 /(SELECT SUM(COUNT(idappareil)) FROM appareil GROUP BY idAppareil ) as ratio   FROM APPAREIL GROUP BY EAN , nom ,marque  ORDER BY  COUNT(idAppareil) DESC ; 
--<=>
SELECT ROW_NUMBER() OVER (ORDER BY COUNT(idAppareil) DESC ) AS classement , marque ,nom , COUNT(idAppareil) as nb_de_modeles , COUNT(*) * 100.0 /SUM(COUNT(*)) OVER() as ratio   FROM APPAREIL GROUP BY EAN , nom ,marque  ORDER BY  COUNT(idAppareil) DESC ; 

SELECT ROW_NUMBER() OVER (ORDER BY COUNT(idAppareil) DESC ) AS classement , marque ,LISTAGG (DISTINCT nom , ',') WITHIN GROUP( ORDER BY nom ) as modeles ,  COUNT(idAppareil) as nb_de_modeles , COUNT(*) * 100.0 /SUM(COUNT(*)) OVER() as ratio   FROM APPAREIL GROUP BY marque   ; 

WITH t2 AS (
 SELECT idpost , idphoto  , COUNT (*) as nb_like FROM LIKEU ,PHOTO ,POST , oeuvre WHERE  licence ='TousDroitsReserves'  AND idoeuvre = id_oeuvre_post AND  id_oeuvre_post = id_oeuvre_photo AND id_post_likeu = idpost  
GROUP BY idpost , idphoto
)
SELECT idpost ,  idphoto  ,  nb_like  FROM t2  WHERE t2.nb_like >= ALL(SELECT t2.nb_like FROM t2);

WITH t3 AS (
SELECT  idpost , idphoto  , COUNT (*) as nb_gallerie FROM GALLERIE INNER JOIN POST ON idpost =id_post_gallerie INNER JOIN OEUVRE ON idoeuvre=id_oeuvre_post INNER JOIN PHOTO ON idoeuvre = id_oeuvre_photo GROUP BY idpost , idphoto
)
SELECT idpost ,  idphoto  ,  nb_gallerie  FROM t3  WHERE t3. nb_gallerie >= ALL(SELECT t3. nb_gallerie FROM t3);


